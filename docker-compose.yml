
services:
  postgres:
    image: postgres:16-alpine
    container_name: fastintercom-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: intercom_mcp
      POSTGRES_USER: intercom
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U intercom"]
      interval: 10s
      timeout: 5s
      retries: 5

  fastintercom:
    build: .
    container_name: fastintercom-mcp
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    
    environment:
      # Required
      - INTERCOM_ACCESS_TOKEN=${INTERCOM_ACCESS_TOKEN}
      
      # Database configuration
      - DATABASE_URL=postgresql://intercom:${POSTGRES_PASSWORD:-changeme}@postgres/intercom_mcp
      
      # HTTP Server configuration
      - HTTP_HOST=0.0.0.0
      - HTTP_PORT=8000
      - HTTP_PATH=/mcp
      
      # Context window management
      - MAX_RESPONSE_TOKENS=${MAX_RESPONSE_TOKENS:-40000}
      - MAX_ITEMS_PER_SEARCH=${MAX_ITEMS_PER_SEARCH:-20}
      
      # Optional configuration
      - FASTINTERCOM_LOG_LEVEL=${FASTINTERCOM_LOG_LEVEL:-INFO}
      - FASTINTERCOM_INITIAL_SYNC_DAYS=${FASTINTERCOM_INITIAL_SYNC_DAYS:-90}
      - FASTINTERCOM_MAX_SYNC_AGE_MINUTES=${FASTINTERCOM_MAX_SYNC_AGE_MINUTES:-5}
      - FASTINTERCOM_BACKGROUND_SYNC_INTERVAL=${FASTINTERCOM_BACKGROUND_SYNC_INTERVAL:-10}
      
      # Container paths
      - FASTINTERCOM_DB_PATH=/data/fastintercom.db
      - FASTINTERCOM_CONFIG_PATH=/config/config.json
      - FASTINTERCOM_DATA_DIR=/data
    
    volumes:
      # Persistent data storage
      - fastintercom-data:/data
      - fastintercom-config:/config
      - fastintercom-logs:/var/log/fastintercom
      
      # For local development - mount project directory
      # - .:/app:ro
    
    ports:
      # Expose HTTP MCP port (comment out for stdio-only mode)
      - "8000:8000"
    
    healthcheck:
      test: ["CMD", "python", "-m", "fast_intercom_mcp.cli", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

volumes:
  postgres_data:
    driver: local
  fastintercom-data:
    driver: local
  fastintercom-config:
    driver: local
  fastintercom-logs:
    driver: local